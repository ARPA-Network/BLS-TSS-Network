version: '3'
services:
  node1:
    image: arpachainio/node:latest
    container_name: node1
    volumes:
      - "${PWD}/arpa-node/config_1.yml:/usr/src/app/external/config.yml"
    ports:
      - "50061:50061"
      - "50091:50091"
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  node2:
    image: arpachainio/node:latest
    container_name: node2
    volumes:
      - "${PWD}/arpa-node/config_2.yml:/usr/src/app/external/config.yml"
    ports:
      - "50062:50061"
      - "50092:50091"
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"


  node3:
    image: arpachainio/node:latest
    container_name: node3
    volumes:
      - "${PWD}/arpa-node/config_3.yml:/usr/src/app/external/config.yml"
    ports:
      - "50063:50061"
      - "50093:50091"
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
# kill docker containers only: 
# docker kill $(docker ps -q -f ancestor=arpachainio/node:latest)


# from container perspective, host ip is: 172.17.0.1

#{"time":"2023-08-13T18:35:58.189934059+00:00","message":"listener is interrupted. Retry... Error: ContractClientError(ContractError(MiddlewareError(MiddlewareError(MiddlewareError(HTTPError(reqwest::Error { kind: Request, url: Url { scheme: \"http\", cannot_be_a_base: false, username: \"\", password: None, host: Some(Ipv4(0.0.0.0)), port: Some(8545), path: \"/\", query: None, fragment: None }, source: hyper::Error(Connect, ConnectError(\"tcp connect error\", Os { code: 111, kind: ConnectionRefused, message: \"Connection refused\" })) })))))), ","module_path":"arpa_node::node::listener","file":"crates/arpa-node/src/node/listener/mod.rs","line":25,"level":"ERROR","target":"arpa_node::node::listener","thread":"tokio-runtime-worker","thread_id":140451236574976,"node_id":"running","mdc":{},"node_info":"","group_info":""}
# Error: ContractError(MiddlewareError(MiddlewareError(MiddlewareError(HTTPError(reqwest::Error { kind: Request, url: Url { scheme: "http", cannot_be_a_base: false, username: "", password: None, host: Some(Ipv4(0.0.0.0)), port: Some(8545), path: "/", query: None, fragment: None }, source: hyper::Error(Connect, ConnectError("tcp connect error", Os { code: 111, kind: ConnectionRefused, message: "Connection refused" })) })))))